{"subjectName":"IT","subjectDescription":"IT is one of our most popular categories, with in-depth courses and tutorials across all aspects of information technology. Sign up today to learn about cryptocurrency, blockchain, computer networking and server management. You can take free classes for in-demand languages like Python, JavaS... Read more...","subjectBg":"https://cdn01.alison-static.net/search/header-img/it.jpg","resumeLink":"https://alison.com/resume/courses/2220","title":"Diploma in C Programming and Assembly Language","totalEnrolled":"5,525","courseIncludes":["6-10 Hours of Learning","CPD Accreditation","Final Assessment"],"headline":"Learn all you need to know about C programming and assembly language in this free online diploma course.","description":"This programming diploma course takes you through both basic and in-depth concepts related to C programming and assembly language. We explain how function calls are translated to assembly and parameters passed to a function. We then show you how local variables are stored on stack and how they go out of scope after function calls. C is a popular and powerful programming language so sign up to add a valuable skill to your professional portfolio.","courseOutcomes":["Demonstrate how function calls are t...","Describe how parameters are passed t...","Explain how local variables are stor...","Break down the allocation of local v...","Demonstrate how function calls are translated to assembly","Describe how parameters are passed to a function","Explain how local variables are stored on stacks","Break down the allocation of local variables space","Define the phrase ‘local variables go out of scope after the function call’","Identify the instructions that need to be executed before entering or exiting a function","List and explain the various calling conventions for C functions","Compare C and C++ at assembly level","Highlight certain hardware instructions used to speed up C functions","Explain why recursion is not a great idea for repercussion","Demonstrate how function calls are t...","Describe how parameters are passed t...","Explain how local variables are stor...","Break down the allocation of local v...","Demonstrate how function calls are translated to assembly","Describe how parameters are passed to a function","Explain how local variables are stored on stacks","Break down the allocation of local variables space","Define the phrase ‘local variables go out of scope after the function call’","Identify the instructions that need to be executed before entering or exiting a function","List and explain the various calling conventions for C functions","Compare C and C++ at assembly level","Highlight certain hardware instructions used to speed up C functions","Explain why recursion is not a great idea for repercussion"],"courseDescription":"<p>This programming diploma course begins by laying out the 8086 processor architecture (x86 processor). We then take you through commonly used assembly instructions and explain the use of stack and related instructions. We establish the role and many capabilities of microprocessors. You will also learn about stack, stack pointer and arithmetic-logic unit (ALU) instructions as we examine examples of different types of compilers like the GNU compiler collection (GCC), Turbo C and MS Visual C models.</p><p>The course goes on to break down how to convert C programs to assembly languages in either an optimized or unoptimized manner. We explain that many redundant operations have to be removed to optimize a piece of assembly code. Unless a compiler is used in a particular optimized mode, it may not be possible to always find the most optimized and quickest instruction set at the assembly level. We also teach you how to make use of the ‘PUSH’ and ‘POP’ operations to swap two variables in C.</p><p>We then go through the compilation steps in C programming. We study how high-level function calls are translated into low-level assembly instructions using the concepts of ‘prologue’ and ‘epilogue’ and how variables are passed and assessed in C. You will also learn how certain C functions are optimized by exploiting hardware loops. Finally, we show you how to compare the impact of recursion and loops to appreciate the importance of local variables’ security. This diploma course helps you master C programming to take the next step in your career</p><a href=\"https://alison.com/resume/courses/2220\" class=\"l-but course_btn\">Start Course Now</a>","certificateDetail":"<p> All Alison courses are free to enrol study and complete. To successfully complete this <span class=\"course-type\">diploma</span> course and become an Alison Graduate, you need to achieve 80% or higher in each course assessment. Once you have completed this <span class=\"course-type\">diploma</span> course, you have the option to acquire an official Diploma, which is a great way to share your achievement with the world. </p><div class=\"l-list l-list--tick\"><h6>Your Alison <span class=\"course-type\">diploma</span> is:</h6><ul><li>Ideal for sharing with potential employers</li><li>Include it in your CV, professional social media profiles and job applications.</li><li>An indication of your commitment to continuously learn, upskill &amp; achieve high results.</li><li>An incentive for you to continue empowering yourself through lifelong learning.</li></ul></div><hr><div class=\"l-flex l-flex--even\"><div class=\"l-list l-list--bullet\"><h6>Alison offers <span class=\"l-list__color\">3 types</span> of Diplomas for completed Diploma courses:</h6><ul><li><strong>Digital <span class=\"course-type\">diploma</span>:</strong> a downloadable <span class=\"course-type\">diploma</span> in PDF format immediately available to you when you complete your purchase. </li><li><strong><span class=\"course-type\">diploma</span>:</strong> a physical version of your officially branded and security-marked <span class=\"course-type\">diploma</span>, posted to you with FREE shipping. </li><li><strong>Framed <span class=\"course-type\">diploma</span>:</strong> a physical version of your officially branded and security marked <span class=\"course-type\">diploma</span> in a stylish frame, posted to you with FREE shipping. </li></ul></div><div class=\"l-diploma\"><img class=\"lazyload\" data-src=\"https://cdn01.alison-static.net/public/html/site/img/course-landing-v2/diploma.png\"><a class=\"course_btn course_btn--alt\" href=\"https://alison.com/resume/courses/2220\">Start Course Now <span class=\"icon-thick-chevron-down right\"></span></a></div></div><p> All <span class=\"course-type\">diploma</span> are available to purchase through the <a href=\"https://alison.com/shop\">Alison Shop</a>. For more information on purchasing Alison <span class=\"course-type\">diploma</span>, please visit our <a href=\"https://alison.com/faqs\">FAQs</a>. If you decide not to purchase your Alison <span class=\"course-type\">diploma</span>, you can still demonstrate your achievement by sharing your Learner Record or Learner Achievement Verification, both of which are accessible from your <a href=\"https://alison.com/dashboard\">Dashboard</a>. For more details on our <span class=\"course-type\">diploma</span> pricing, please visit our <a href=\"https://alison.com/about/pricing\">Pricing Page</a></p>","modules":[{"name":"Module","details":"Introduction to Microprocessors and Assembly Language Programming","description":"In this module, you will learn about the 8086 microprocessor and assembly language programming. The module gives a brief introduction to the 8086 processor architecture and commonly used assembly instructions. You will also learn about the use of stack and other related instructions.","topics":["Introduction to Microprocessors and Assembly Language Programming - Learning Outcomes","x86 Intsruction Set","Registers in Microprocessors","Execution of Instructions in x86 Microprocessors","Arithmetic Logic Unit (ALU) Instructions","Stack Operations","Introduction to Microprocessors and Assembly Language Programming - Lesson Summary"]},{"name":"Module","details":"C Programming and Inline Assembly","description":"In this module, you will be introduced to the concepts of C programming and inline assembly. Topics covered include data types and their sizes, ALU operation, string length and multiplication using repeated addition. Furthermore, you will learn how to swap two variables both in C and inline assembly.","topics":["C Programming and Inline Assembly - Learning Outcomes","Inline Assembly","Compiler Output","Pointer Arithmetic at an Assembly Language Level","Swapping variables","Compiler Explorer","C Programming and Inline Assembly - Lesson Summary"]},{"name":"Module","details":"Diploma in C Programming and Assembly Language - First Assessment","description":"You need to score 80% or more to pass this assessment.","topics":["First Assessment"]},{"name":"Module","details":"Compiling C to Assembly Language","description":"In this module, you will learn about the compilation of C programs to assembly language. You will understand how high-level function calls are translated into low-level assembly instructions, along with how variables are passed and assessed.","topics":["Compiling C to Assembly Language - Learning Outcomes","Compiling a C Program","Compiling a C Program to Assembly language","Execution of a C Program","Function calls in C","C++ Functions at Assembly Language Level","Compiling C to Assembly Language - Lesson Summary"]},{"name":"Module","details":"C++ and Special Functions","description":"In this module, you will be introduced to C++ and some Special Functions. You will compare C vs C++ at an assembly language level, recursions & loops, and learn about optimizing certain functions by exploiting hardware loops in C.","topics":["C++ and Special Functions - Learning Outcomes","Passing Arguments to a Function","Variable Number of Argument Function","Implementing Printf()","Recursion Vs Loops","Exploiting Hardware Loops","Security of Local Variables","C++ and Special Functions - Lesson Summary"]},{"name":"Module","details":"Diploma in C Programming and Assembly Language - Second Assessment","description":"You need to score 80% or more to pass this assessment.","topics":["Second Assessment"]},{"name":"Module","details":"Course assessment","description":"","topics":["Diploma in C Programming and Assembly Language - Course assessment"]}]}